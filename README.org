* XGBoost.swift

[[https://github.com/ddxgz/XGBoost.swift/workflows/macOS/badge.svg][https://github.com/ddxgz/XGBoost.swift/workflows/macOS/badge.svg]] 
[[https://github.com/ddxgz/XGBoost.swift/workflows/Ubuntu/badge.svg][https://github.com/ddxgz/XGBoost.swift/workflows/Ubuntu/badge.svg]]


A Swift interface for [[https://github.com/dmlc/xgboost][XGBoost]].

The current interface is wrapping around the C API of XGBoost, 
 tries to conform to the Python API. Document see [[https://ddxgz.github.io/XGBoost.swift/][docs]].

If you run into any problem, please file an *issue* or even better a *pull request*.


*Note*: this is not an official XGBoost project.


** Installation and dependency library
*** macOS
You can follow 
    [[https://xgboost.readthedocs.io/en/latest/build.html][XGBoost document]] for 
    installation or build library. Develop and tested under macOS 10.15 with =brew install xgboost=. The C header file and
 library are located through =pkg-config=, it should work directly. Otherwise, place 
 an pkg-config file as =/usr/local/lib/pkgconfig/xgboost.pc= with content:
 

#+begin_src 
prefix=/usr/local/Cellar/xgboost/1.1.0
exec_prefix=${prefix}/bin
libdir=${prefix}/lib
includedir=${prefix}/include

Name: xgboost
Description: XGBoost
Version: 1.1.0
Cflags: -I${includedir}
Libs: -L${libdir} -lxgboost
#+end_src
 
 Please read through the following links for more configuration detail.

- [[https://github.com/apple/swift-package-manager/blob/master/Documentation/Usage.md#requiring-system-libraries][swift-package-manager]] 
- [[https://clang.llvm.org/docs/Modules.html#module-map-language][Clang Module Map Language]]
- [[https://people.freedesktop.org/~dbn/pkg-config-guide.html][Guide to pkg-config]]

*** Ubuntu
Ubuntu is tested by using [[https://swift.org/download/#docker][Swift's docker image]],
    the latest version is Ubuntu18.04 for now. Please follow 
    [[https://xgboost.readthedocs.io/en/latest/build.html][XGBoost document]] for 
    installation or build library. Or you can check the Dockerfile 
    `Dockerfile_test_ubuntu` that used for testing.

*** Swift package manager
It evovles fastly, please constantly check the version.

#+begin_src rust
.package(url: "https://github.com/ddxgz/XGBoost.swift.git", from: "0.6.0")
#+end_src

** Usage
*Still in early development, use with caution.* 
See more examples in [[https://ddxgz.github.io/XGBoost.swift/][docs]].

#+begin_src rust
let train = try DMatrix(fromFile: "data/agaricus.txt.train")
let test = try DMatrix(fromFile: "data/agaricus.txt.test")

let bst = try xgboost(data: train, numRound: 10)
let pred = bst.predict(data: test)

let cvResult = xgboostCV(data: train, numRound: 10)

// Use callbacks
// The `SimplePrintEvalution` is a builtin simple example of callback.
// You can also define a custom callback that conforms to XGBCallback protocol, see
// more in the document of protocol.
let callbacks = [SimplePrintEvalution(period: 5)]
let bst = try xgboost(data: train, numRound: 10, evalSet: [(test, "test")],
                        callbacks: callbacks)

// save and load model as binary
let modelBin = "bst.bin"
try bst.saveModel(toFile: modelBin)
let bstLoaded = try xgboost(data: train, numRound: 0, modelFile: modelBin)

// save and load model as json
let modelJson = "bst.json"
bst.saveModel(toFile: modelJson) 
let bstJsonLoaded = try xgboost(data: train, numRound: 0, modelFile: modelJson)

// save model config
try bst.saveConfig(toFile: "config.json")
#+end_src


** TODOs
- [ ] Support more data representation models
    - https://github.com/saeta/penguin
    - https://github.com/dastrobu/NdArray
    - https://github.com/AlexanderTar/LASwift
    - Tensor
    - NumPy
- [ ] Dask support